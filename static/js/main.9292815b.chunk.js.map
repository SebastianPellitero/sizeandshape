{"version":3,"sources":["icons/tick.svg","icons/center.svg","icons/reset.svg","icons/list.svg","constants/theme.js","components/board/board.style.js","components/canvas/canvas.style.js","constants/global.js","utils/circle.js","utils/parallelogram.js","components/canvas/canvas.js","components/details/details.style.js","components/details/details.js","components/board/board.js","components/tutorial/tutorial.style.js","components/about/about.js","components/header/header.style.js","components/header/header.js","constants/routes.js","components/tutorial/tutorial.js","router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","THEME_KEYS","ocherYellow","oceanBlue","waterBluelight","woodBrown","brightRed","white","cherry","lavender","gray","lightGray","GridWrapper","styled","Grid","_templateObject","CanvasWrapper","div","canvas_style_templateObject","grey","CUSTOM_DOT","color","radius","borderColor","INNER_CIRCLE","lineWidth","PARALELLOGRAM","CANVAS","width","height","drawCircle","context","location","beginPath","arc","x","y","Math","PI","fillStyle","fill","strokeStyle","stroke","distanceBetweenTwoPoints","pointA","pointB","a","b","sqrt","drawLine","ctx","previous","destination","moveTo","lineTo","calculateCenterOfParallelogram","points","_points","Object","slicedToArray","pointOne","pointTwo","pointThree","pointFour","calculateAreaParallelogram","length","sideA","sideB","sideC","semiperimeter","getFourthPoint","_points2","drawParallelogramSides","lastPoint","previousPoint","drawParallelogram","circle","_points3","center","reDrawParallelogram","clearRect","i","newPoints","slice","Canvas","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getMousePosition","event","offset","state","canvas","getBoundingClientRect","clientX","left","clientY","top","isMouseInsidePoint","coordinates","distanceX","distanceY","setDraggable","typeEvent","type","setState","isMouseDown","pointSelected","isFocused","calculateCenteredCircleInfo","area","handleCanvasClick","_this$state","_this$props","handleParallelogramChange","handleCircleChange","vertices","parallelogram","parallelogramArea","_","find","concat","addEventListener","handleMouseMove","removeEventListener","_this$state2","cloneDeep","_this$props2","key","searchClickedPoint","handleClear","_this$state3","document","getElementById","getContext","react_default","createElement","canvas_style","Button","onClick","className","id","Component","defaultProps","DetailsWrapper","details_style_templateObject","Details","showPoints","map","point","index","item","xs","Typography","gutterBottom","variant","details_style","container","trunc","circleArea","Fragment","CanvasBoard","radious","board_style","lg","canvas_canvas","details","tutorial_style_templateObject","About","tutorial_style","component","href","AppBarWrapper","AppBar","header_style_templateObject","ToolbarWrapper","Toolbar","_templateObject2","Header","position","react_router_dom","to","Tutorial","List","ListItem","ListItemAvatar","Avatar","src","tick","alt","list","reset","AppRouter","header","react_router","path","exact","App","CssBaseline","router","Boolean","window","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9292815b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tick.e249914e.svg\";","module.exports = __webpack_public_path__ + \"static/media/center.ecafd7c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/reset.2be41fd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.cbd8b5a8.svg\";","export const THEME_KEYS = {\r\n  ocherYellow: \"#F2CB05\",\r\n  oceanBlue: \"#03588C\",\r\n  waterBluelight: \"#03738C\",\r\n  woodBrown: \"#BF4904\",\r\n  brightRed: \"#F21616\",\r\n  white: \"#FFFFFF\",\r\n  cherry: \"#3B3C4C\",\r\n  lavender: \"#e6e6fa\",\r\n  gray: \"#9697A9\",\r\n  lightGray: \"#F8F8FF\"\r\n};","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport styled from 'styled-components';\r\n/*------------------------------------------------*/\r\n/* INTERNAL DEPENDENCIES\r\n/*------------------------------------------------*/\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// Constant\r\nimport { THEME_KEYS } from \"../../constants/theme\";\r\n\r\nconst GridWrapper = styled(Grid)`\r\n  background: ${THEME_KEYS.lavender};\r\n  height: 100vh;\r\n`;\r\n\r\nexport default GridWrapper;\r\n","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport styled from \"styled-components\";\r\n// Constant\r\nimport { THEME_KEYS } from \"../../constants/theme\";\r\n\r\nconst CanvasWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  button {\r\n    position: absolute;\r\n    top: 105px;\r\n    right: 40px;\r\n    background: ${THEME_KEYS.lavender};\r\n    &:hover {\r\n      color: ${THEME_KEYS.lavender};\r\n    }\r\n  }\r\n  canvas {\r\n    margin-top: 20px;\r\n    border: 1px solid ${THEME_KEYS.grey};\r\n    background-color: ${THEME_KEYS.white};\r\n  }\r\n`;\r\n\r\nexport default CanvasWrapper;\r\n","import { THEME_KEYS } from \"./theme\";\r\n\r\nexport const CUSTOM_DOT = {\r\n  color: THEME_KEYS.brightRed,\r\n  radius: 5.5,\r\n  borderColor: THEME_KEYS.brightRed\r\n};\r\n\r\nexport const INNER_CIRCLE = {\r\n  color: null,\r\n  borderColor: THEME_KEYS.ocherYellow,\r\n  lineWidth: 2\r\n};\r\n\r\nexport const PARALELLOGRAM = {\r\n  color: THEME_KEYS.oceanBlue\r\n};\r\n\r\nexport const CANVAS = {\r\n   width: 1000,\r\n   height: 700\r\n};\r\n","/*------------------------------------------------*/\r\n/* PUBLIC FUNCTIONS\r\n/*------------------------------------------------*/\r\n/**\r\n * Draw a circle with arguments passed through parameters.\r\n * @function drawCircle\r\n * @param {Object} context - canvas context.\r\n * @param {Object} location - coordinates to use as center of the circle.\r\n * @param {String} color - optional - color to fill the circle.\r\n * @param {number} radius - radius of circle.\r\n * @param {String} borderColor - optional - line's color for circle.\r\n * @param {number} lineWidth - optional - line's width for the circle.\r\n */\r\nconst drawCircle = (context, location, color, radius, borderColor, lineWidth) => {\r\n  context.beginPath();\r\n  context.arc(location.x, location.y, radius, 0, 2 * Math.PI, false);\r\n  if (lineWidth) {\r\n    context.lineWidth = lineWidth;\r\n  }\r\n  if (color) {\r\n    context.fillStyle = color;\r\n    context.fill();\r\n  }\r\n  if (borderColor) {\r\n    context.strokeStyle = borderColor;\r\n    context.stroke();\r\n  }\r\n};\r\n\r\nexport { drawCircle };","/*------------------------------------------------*/\r\n/* INTERNAL DEPENDENCIES\r\n/*------------------------------------------------*/\r\nimport { drawCircle } from \"./circle\";\r\n// Constants\r\nimport {\r\n  CANVAS,\r\n  CUSTOM_DOT,\r\n  PARALELLOGRAM,\r\n  INNER_CIRCLE\r\n} from \"../constants/global\";\r\n\r\n/*------------------------------------------------*/\r\n/* PRIVATE FUNCTIONS\r\n/*------------------------------------------------*/\r\n/**\r\n * Calculates the distance between 2 points using the distance formula that\r\n * is derived from the Pythagorean theorem.\r\n * @function distanceBetweenTwoPoints\r\n * @param {Object} pointA - coordinates of point A\r\n * @param {Object} pointB - coordinates of point B\r\n * @returns {number} distance between pointA and pointB in pixels\r\n */\r\nconst distanceBetweenTwoPoints = (pointA, pointB) => {\r\n  const a = pointA.x - pointB.x;\r\n  const b = pointA.y - pointB.y;\r\n\r\n  return Math.sqrt(a * a + b * b);\r\n};\r\n\r\n/**\r\n * Draw a line between two points creating a side of the parallelogram.\r\n * @function drawLine\r\n * @param {Object} context - canvas context.\r\n * @param {Object} previous - coordinates of the previous point.\r\n * @param {Object} destination - coordinates of the destination point.\r\n */\r\nconst drawLine = (ctx, previous, destination) => {\r\n  ctx.beginPath();\r\n  ctx.moveTo(previous.x, previous.y);\r\n  ctx.lineTo(destination.x, destination.y);\r\n  ctx.lineWidth = 2;\r\n  ctx.strokeStyle = PARALELLOGRAM.color;\r\n  ctx.stroke();\r\n};\r\n\r\n/*------------------------------------------------*/\r\n/* PUBLIC FUNCTIONS\r\n/*------------------------------------------------*/\r\n\r\n/**\r\n * Calculates the coordinates of the center of the parallelogram.\r\n * @function calculateCenterOfParallelogram\r\n * @param {Array} points - array with points coordinates.\r\n * @returns {number} - coordinates of the center point of the parallelogram.\r\n */\r\nconst calculateCenterOfParallelogram = points => {\r\n  const [pointOne, pointTwo, pointThree, pointFour] = points;\r\n\r\n  const center_x = (pointOne.x + pointTwo.x + pointThree.x + pointFour.x) / 4;\r\n  const center_y = (pointOne.y + pointTwo.y + pointThree.y + pointFour.y) / 4;\r\n  return { x: center_x, y: center_y };\r\n};\r\n\r\n/**\r\n * Calculates the area of the parallelogram dividing the parallelogram in\r\n * two triangles and using the formula of Heron that\r\n * finds the area of a triangle of which all its sides are known.\r\n * @function calculateAreaParallelogram\r\n * @param {Array} points - array with points coordinates.\r\n * @returns {number} distance between pointA and pointB in pixels.\r\n */\r\nconst calculateAreaParallelogram = points => {\r\n  // Only calculates area when there are 4 points.\r\n  if (!points || points.length < 4) {\r\n    return 0;\r\n  }\r\n  // Get diagonal lenght\r\n  const sideA = distanceBetweenTwoPoints(points[1], points[3]);\r\n  // Get lenght of p4-p1 vector\r\n  const sideB = distanceBetweenTwoPoints(points[3], points[0]);\r\n  // Get lenght of p2-p1 vector\r\n  const sideC = distanceBetweenTwoPoints(points[1], points[0]);\r\n  //Calculate semiperimeter of the triangle\r\n  const semiperimeter = (sideA + sideB + sideC) / 2;\r\n  // With the three sides of the triangle, use Heron's formule to calculate area.\r\n  // square root(SP(SP-A)(SP-B)(SP-C)).\r\n  return (\r\n    Math.sqrt(\r\n      semiperimeter *\r\n        (semiperimeter - sideA) *\r\n        (semiperimeter - sideB) *\r\n        (semiperimeter - sideC)\r\n    ) * 2\r\n  );\r\n};\r\n\r\n/**\r\n * Calculates the coordinates of the fourth point of the parallelogram\r\n * using the three points selected by the user.\r\n * @function getFourthPoint\r\n * @param {Array} points - array with points coordinates.\r\n * @returns {number} - coordinates of the fourth point of the parallelogram.\r\n */\r\nconst getFourthPoint = points => {\r\n  const [pointOne, pointTwo, pointThree] = points;\r\n  const x4 = pointOne.x - (pointTwo.x - pointThree.x);\r\n  const y4 = pointThree.y - (pointTwo.y - pointOne.y);\r\n  return { x: x4, y: y4 };\r\n};\r\n\r\n/**\r\n * Draw the first three parallelogram sides.\r\n * @function drawParallelogramSides\r\n * @param {Object} context - canvas context.\r\n * @param {Array} points - array with points coordinates.\r\n */\r\nconst drawParallelogramSides = (context, points) => {\r\n  // Gets the last point added to the array.\r\n  const lastPoint = points[points.length - 1];\r\n  // Draw a red circle using this point as center.\r\n  const { color, radius, borderColor } = CUSTOM_DOT;\r\n  drawCircle(context, lastPoint, color, radius, borderColor);\r\n  // If there are more than one point, it will draw a line between the last 2 added.\r\n  if (points.length - 1 > 0) {\r\n    const previousPoint = points[points.length - 2];\r\n    drawLine(context, previousPoint, lastPoint);\r\n  }\r\n};\r\n\r\n/**\r\n * Draw the final point for the parallelogram and the inner yellow circle.\r\n * @function drawParallelogram\r\n * @param {Object} context - canvas context.\r\n * @param {Array} points - array with points coordinates.\r\n * @param {Object} circle - inner circle's info.\r\n * @param {Object} circle.center - object with the coordinates of the circle's center.\r\n * @param {number} circle.radius - circle's radius.\r\n */\r\nconst drawParallelogram = (context, points, circle) => {\r\n  const [pointOne, , pointThree, pointFour] = points;\r\n  // Draw the closing lines.\r\n  drawLine(context, pointThree, pointFour);\r\n  drawLine(context, pointOne, pointFour);\r\n  // Draw a centered circle with the same area of the parallelogram.\r\n  const { color, borderColor, lineWidth } = INNER_CIRCLE;\r\n  const { center, radius } = circle;\r\n  drawCircle(context, center, color, radius, borderColor, lineWidth);\r\n}\r\n\r\n/**\r\n * Re-Draw the parallelogram and the inner yellow circle.\r\n * @function reDrawParallelogram\r\n * @param {Object} context - canvas context.\r\n * @param {Array} points - array with points coordinates.\r\n * @param {Object} circle - inner circle's info.\r\n * @param {Object} circle.center - object with the coordinates of the circle's center.\r\n * @param {number} circle.radius - circle's radius.\r\n */\r\nconst reDrawParallelogram = (context, points, circle) => {\r\n  // Clear canvas.\r\n  context.clearRect(0, 0, CANVAS.width, CANVAS.height);\r\n  for (let i = 0; i < 3; i++) {\r\n    // Adds each point to a new array and reuses drawParallelogramSides\r\n    // to draw the parallelogram.\r\n    const newPoints = points.slice(0, i + 1);\r\n    drawParallelogramSides(context, newPoints);\r\n  }\r\n  // Draw the final point for the parallelogram and the inner yellow circle.\r\n  drawParallelogram(context, points, circle);\r\n};\r\n\r\nexport {\r\n  drawParallelogram,\r\n  reDrawParallelogram,\r\n  drawParallelogramSides,\r\n  calculateAreaParallelogram,\r\n  calculateCenterOfParallelogram,\r\n  getFourthPoint\r\n};\r\n","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n/*------------------------------------------------*/\r\n/* INTERNAL DEPENDENCIES\r\n/*------------------------------------------------*/\r\n// Styles\r\nimport CanvasWrapper from \"./canvas.style\";\r\n// Constants\r\nimport { CANVAS, CUSTOM_DOT } from \"../../constants/global\";\r\n// Components\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  drawParallelogram,\r\n  reDrawParallelogram,\r\n  calculateAreaParallelogram,\r\n  drawParallelogramSides,\r\n  getFourthPoint,\r\n  calculateCenterOfParallelogram\r\n} from \"../../utils/parallelogram\";\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      context: null,\r\n      isMouseDown: false,\r\n      pointSelected: {\r\n        key: 0,\r\n        isFocused: false\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const canvas = document.getElementById(\"drawCanvas\");\r\n    canvas.addEventListener(\"click\", this.handleCanvasClick);\r\n\r\n    this.setState({\r\n      canvas,\r\n      context: canvas.getContext(\"2d\")\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets the coordinates of the pointer on the canvas.\r\n   * @function getMousePosition\r\n   * @param {Object} event - event's dispatched info.\r\n   * @returns {Object} {x, y} - coordinates of mouse click.\r\n   */\r\n  getMousePosition = event => {\r\n    const { canvas } = this.state;\r\n    // Return the size of canvas and its position relative to the viewport.\r\n    const offset = canvas.getBoundingClientRect();\r\n    // Adjust x and y with the position calculated.\r\n    return {\r\n      x: event.clientX - offset.left,\r\n      y: event.clientY - offset.top\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Calculates if the mouse is inside the point through Pythagorean theorem (x^2 + y^2 = r^2)\r\n   * @function isMouseInsidePoint\r\n   * @param {Object} circle - coordinates of considered circle.\r\n   * @param {Object} event - event's dispatched info.\r\n   * @returns {boolean} -- if its inside the given circle.\r\n   */\r\n  isMouseInsidePoint = (circle, event) => {\r\n    let coordinates = this.getMousePosition(event);\r\n    const distanceX = coordinates.x - circle.x;\r\n    const distanceY = coordinates.y - circle.y;\r\n    //return true if x^2 + y^2 <= radius squared.\r\n    return (\r\n      distanceX * distanceX + distanceY * distanceY <=\r\n      CUSTOM_DOT.radius * CUSTOM_DOT.radius\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Sets a flag that determinates if the mouse is clicked or loose.\r\n   * @function setDraggable\r\n   * @param {Object} event - event's dispatched info.\r\n   */\r\n  setDraggable = event => {\r\n    const typeEvent = event.type;\r\n    if (typeEvent === \"mousedown\") {\r\n      this.setState({ isMouseDown: true });\r\n    } else if (typeEvent === \"mouseup\") {\r\n      this.setState({\r\n        isMouseDown: false,\r\n        pointSelected: {\r\n          isFocused: false\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Calculates the center and the radius for the inner circle with the\r\n   * parallelogram area\r\n   * @function calculateCenteredCircleInfo\r\n   * @param {Object} context - canvas context.\r\n   * @param {Array} points - array with points coordinates.\r\n   * @returns {Object} -- center and radius for the circle\r\n   */\r\n  calculateCenteredCircleInfo = (points, area) => {\r\n    // Gets the center of the parallelogram.\r\n    const center = calculateCenterOfParallelogram(points);\r\n    // Calculates radius of the circle using the area of the parallelogram.\r\n    const radius = Math.sqrt(area / Math.PI);\r\n    return {\r\n      center,\r\n      radius\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Function that draw a point and the line, if the point is the third\r\n   * it will calculate the complete shape.\r\n   * @function handleCanvasClick\r\n   * @param {Object} event - event's dispatched info.\r\n   */\r\n  handleCanvasClick = event => {\r\n    const { context, canvas } = this.state;\r\n    const {\r\n      handleParallelogramChange,\r\n      handleCircleChange,\r\n      parallelogram\r\n    } = this.props;\r\n    const { vertices } = parallelogram;\r\n\r\n    const coordinates = this.getMousePosition(event);\r\n    const location = { x: coordinates.x, y: coordinates.y };\r\n\r\n    let parallelogramArea = 0;\r\n    // If the new point is not already on the vertices array or if there are\r\n    // less than 3 points\r\n    if (!_.find(vertices, location) && vertices.length < 3) {\r\n      let newPoints = vertices.concat(location);\r\n      drawParallelogramSides(context, newPoints);\r\n      if (newPoints.length === 3) {\r\n        // Calculates the fourth point.\r\n        const pointFour = getFourthPoint(newPoints);\r\n        newPoints = newPoints.concat(pointFour);\r\n        // Gets the parallelogram area to draw the inner circle with the same area.\r\n        parallelogramArea = calculateAreaParallelogram(newPoints);\r\n        // Calculate inner circle info\r\n        const circle = this.calculateCenteredCircleInfo(\r\n          newPoints,\r\n          parallelogramArea\r\n        );\r\n        // Saves info on parent\r\n        handleCircleChange(circle.center, circle.radius);\r\n        // Finish drawing the parallelogram and the inner circle\r\n        drawParallelogram(context, newPoints, circle);\r\n        //Asign new behavior to the mouse event.\r\n        canvas.addEventListener(\"mousedown\", this.setDraggable);\r\n        canvas.addEventListener(\"mousemove\", this.handleMouseMove);\r\n        canvas.addEventListener(\"mouseup\", this.setDraggable);\r\n        canvas.removeEventListener(\"click\", this.handleCanvasClick);\r\n      }\r\n      // Saves info on parent\r\n      handleParallelogramChange(newPoints, parallelogramArea);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function that search if any point is clicked and if one is clicked\r\n   * it will update and recalculate the shape.\r\n   * @function handleMouseMove\r\n   * @param {Object} event - event's dispatched info\r\n   */\r\n  handleMouseMove = event => {\r\n    const { isMouseDown, pointSelected, context } = this.state;\r\n    const { parallelogram } = this.props;\r\n    const { vertices } = parallelogram;\r\n    if (isMouseDown && vertices.length === 4) {\r\n      if (pointSelected.isFocused) {\r\n        // If one point is selected it update and recalculate and redraw the parallelogram.\r\n        const coordinates = this.getMousePosition(event);\r\n        const newPoints = _.cloneDeep(vertices);\r\n        const { handleParallelogramChange, handleCircleChange } = this.props;\r\n\r\n        newPoints[pointSelected.key].x = coordinates.x;\r\n        newPoints[pointSelected.key].y = coordinates.y;\r\n        // Recalculates and updates fourth point\r\n        const pointFour = getFourthPoint(newPoints);\r\n        newPoints[3] = pointFour;\r\n        // Recalculates areas and circle info\r\n        const parallelogramArea = calculateAreaParallelogram(vertices);\r\n        const circle = this.calculateCenteredCircleInfo(\r\n          newPoints,\r\n          parallelogramArea\r\n        );\r\n        // Updates info on parent\r\n        handleCircleChange(circle.center, circle.radius);\r\n        handleParallelogramChange(newPoints, parallelogramArea);\r\n        // Re draw parallelogram\r\n        reDrawParallelogram(context, newPoints, circle);\r\n      } else {\r\n        //Check if the mouse is in one of the points and select the clicked point.\r\n        this.searchClickedPoint(vertices, event);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Loop in each points and select the one that the mouse is pointing.\r\n   * @function searchClickedPoint\r\n   * @param {Array} parallelogram - array of coordinates\r\n   * @param {Object} event - event's dispatched info\r\n   */\r\n  searchClickedPoint = (vertices, event) => {\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      if (this.isMouseInsidePoint(vertices[i], event)) {\r\n        this.setState({\r\n          pointSelected: {\r\n            isFocused: true,\r\n            key: i\r\n          }\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function that reset the canvas and restarts points and area.\r\n   * @function handleClear\r\n   */\r\n  handleClear = () => {\r\n    const { context, canvas } = this.state;\r\n    const { handleParallelogramChange } = this.props;\r\n\r\n    context.clearRect(0, 0, CANVAS.width, CANVAS.height);\r\n    canvas.addEventListener(\"click\", this.handleCanvasClick);\r\n    canvas.removeEventListener(\"mousedown\", this.setDraggable);\r\n    canvas.removeEventListener(\"mousemove\", this.handleMouseMove);\r\n    canvas.removeEventListener(\"mouseup\", this.setDraggable);\r\n    handleParallelogramChange([], 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CanvasWrapper>\r\n        <Button onClick={this.handleClear}>Clear</Button>\r\n        <canvas\r\n          className=\"canvas\"\r\n          id=\"drawCanvas\"\r\n          width={CANVAS.width}\r\n          height={CANVAS.height}\r\n        />\r\n      </CanvasWrapper>\r\n    );\r\n  }\r\n}\r\n\r\n/*------------------------------------------------*/\r\n/* PROP TYPES\r\n/*------------------------------------------------*/\r\nCanvas.propTypes = {\r\n  parallelogram: PropTypes.shape({\r\n    vertices: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        x: PropTypes.number,\r\n        y: PropTypes.number\r\n      })\r\n    ),\r\n    area: PropTypes.number\r\n  }),\r\n  circle: PropTypes.shape({\r\n    radious: PropTypes.number,\r\n    center: PropTypes.shape({\r\n      x: PropTypes.number,\r\n      y: PropTypes.number\r\n    })\r\n  }),\r\n  handleParallelogramChange: PropTypes.func.isRequired,\r\n  handleCircleChange: PropTypes.func.isRequired\r\n};\r\n\r\nCanvas.defaultProps = {\r\n  parallelogram: {},\r\n  circle: {}\r\n};\r\n\r\n/*------------------------------------------------*/\r\n/* EXPORTS\r\n/*------------------------------------------------*/\r\nexport default Canvas;\r\n","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport styled from \"styled-components\";\r\n// Constant\r\nimport { THEME_KEYS } from \"../../constants/theme\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst DetailsWrapper = styled(Grid)`\r\n  margin-top: 20px;\r\n  margin-right: 20px;\r\n  color: ${THEME_KEYS.white};\r\n\r\n  .MuiGrid-container {\r\n    background-color: ${THEME_KEYS.cherry};\r\n    border-radius: 5px;\r\n    padding: 20px;\r\n  }\r\n\r\n  h6 {\r\n    color: ${THEME_KEYS.white};\r\n    font-weight: bold;\r\n  }\r\n\r\n  .circle-title {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nexport default DetailsWrapper;\r\n","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n/*------------------------------------------------*/\r\n/* INTERNAL DEPENDENCIES\r\n/*------------------------------------------------*/\r\n// Styles\r\nimport DetailsWrapper from \"./details.style\";\r\n// Components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\"; \r\n\r\nclass Details extends Component {\r\n  /**\r\n   * Returns the markup for every vertice to display on details section\r\n   * @function showPoints\r\n   * @param {Object} parallelogram - object with the vertices of the parallelogram\r\n   */\r\n  showPoints = parallelogram => {\r\n    if (parallelogram) {\r\n      return parallelogram.vertices.map((point, index) => (\r\n        <Grid item xs={12} key={index}>\r\n          <Typography gutterBottom variant=\"h6\">\r\n            Point Number {index + 1}\r\n          </Typography>\r\n          <p>{\"{\"} X: {point.x}, Y: {point.y}{\"}\"}</p>\r\n        </Grid>\r\n      ));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { parallelogram, circle } = this.props;\r\n    if (parallelogram.vertices.length < 1) {\r\n      return (\r\n        <DetailsWrapper>\r\n          <Grid container>\r\n            <p>Add some items to see it's info</p>\r\n          </Grid>\r\n        </DetailsWrapper>\r\n      );\r\n    }\r\n    const { center, radius } = circle;\r\n    const parallelogramArea = Math.trunc(parallelogram.area);\r\n    const circleArea = radius ? Math.trunc(radius * radius * Math.PI) : 0;\r\n    return (\r\n      <DetailsWrapper>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Typography gutterBottom variant=\"h4\">\r\n              Parallelogram\r\n            </Typography>\r\n          </Grid>\r\n          {this.showPoints(parallelogram)}\r\n          {parallelogram.vertices.length === 4 && (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <Typography gutterBottom variant=\"h6\">\r\n                  Total Area: {parallelogramArea}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography gutterBottom variant=\"h4\" className=\"circle-title\">\r\n                  Circle\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography gutterBottom variant=\"h6\">\r\n                  Center Point\r\n                </Typography>\r\n                <p>{\"{\"} X: {Math.trunc(center.x)}, Y: {Math.trunc(center.y)}{\"}\"}</p>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography gutterBottom variant=\"h6\">\r\n                  Radius: {Math.trunc(radius)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography gutterBottom variant=\"h6\">\r\n                  Total Area: {circleArea}\r\n                </Typography>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </DetailsWrapper>\r\n    );\r\n  }\r\n}\r\n\r\n/*------------------------------------------------*/\r\n/* PROP TYPES\r\n/*------------------------------------------------*/\r\nDetails.propTypes = {\r\n  parallelogram: PropTypes.shape({\r\n    vertices: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        x: PropTypes.number,\r\n        y: PropTypes.number\r\n      })\r\n    ),\r\n    area: PropTypes.number\r\n  }),\r\n  circle: PropTypes.shape({\r\n    radious: PropTypes.number,\r\n    center: PropTypes.shape({\r\n      x: PropTypes.number,\r\n      y: PropTypes.number\r\n    })\r\n  })\r\n};\r\n\r\nDetails.defaultProps = {\r\n  parallelogram: {},\r\n  circle: {}\r\n};\r\n\r\n/*------------------------------------------------*/\r\n/* EXPORTS\r\n/*------------------------------------------------*/\r\nexport default Details;\r\n","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport React, { Component } from \"react\";\r\n/*------------------------------------------------*/\r\n/* INTERNAL DEPENDENCIES\r\n/*------------------------------------------------*/\r\n// Styles\r\nimport GridWrapper from \"./board.style\";\r\n// Components\r\nimport Canvas from \"../canvas/canvas\";\r\nimport Details from \"../details/details\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass CanvasBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      parallelogram: {\r\n        vertices: [],\r\n        area: -1\r\n      },\r\n      circle: {\r\n        radious: -1,\r\n        center: {}\r\n      }\r\n    };\r\n  }\r\n\r\n  handleParallelogramChange = (vertices, area) => {\r\n    this.setState({\r\n      parallelogram: {\r\n        vertices,\r\n        area\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCircleChange = (center, radius) => {\r\n    this.setState({\r\n      circle: {\r\n        center,\r\n        radius\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { parallelogram, circle } = this.state;\r\n    return (\r\n      <GridWrapper container>\r\n        <Grid item xs={12} lg={9} className=\"canvas-container\">\r\n          <Canvas\r\n            handleParallelogramChange={this.handleParallelogramChange}\r\n            handleCircleChange={this.handleCircleChange}\r\n            parallelogram={parallelogram}\r\n          />\r\n        </Grid>\r\n        <Grid item  xs={12} lg={3} className=\"canvas-detail-container\">\r\n          <Details\r\n            parallelogram={parallelogram}\r\n            circle={circle}\r\n          />\r\n        </Grid>\r\n      </GridWrapper>\r\n    );\r\n  }\r\n}\r\n\r\n/*------------------------------------------------*/\r\n/* EXPORTS\r\n/*------------------------------------------------*/\r\nexport default CanvasBoard;\r\n","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport styled from 'styled-components';\r\n/*------------------------------------------------*/\r\n/* INTERNAL DEPENDENCIES\r\n/*------------------------------------------------*/\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// Constant\r\nimport { THEME_KEYS } from \"../../constants/theme\";\r\n\r\nconst GridWrapper = styled(Grid)`\r\n  background: ${THEME_KEYS.lavender};\r\n  height: 100vh;\r\n  padding: 40px;\r\n  .inner-grid {\r\n    background-color: ${THEME_KEYS.white};\r\n    padding: 20px 40px;\r\n    margin: 0 auto;\r\n  }\r\n  ul {\r\n    background-color: ${THEME_KEYS.cherry};\r\n    color: ${THEME_KEYS.white};\r\n    border-radius: 5px;\r\n    padding: 20px;\r\n  }\r\n  .subtitle {\r\n    padding: 50px 0 10px 0;\r\n  }\r\n  .MuiAvatar-colorDefault {\r\n    background-color: ${THEME_KEYS.white};\r\n  }\r\n`;\r\n\r\nexport default GridWrapper;\r\n","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport React, { Component } from \"react\";\r\n/*------------------------------------------------*/\r\n/* INTERNAL DEPENDENCIES\r\n/*------------------------------------------------*/\r\n// Styles\r\nimport GridWrapper from \"../tutorial/tutorial.style\";\r\n// Components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <GridWrapper container>\r\n        <Grid item xs={8} className=\"inner-grid\">\r\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n            About me\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Im\r\n            <a href=\"https://www.linkedin.com/in/sebastian-pellitero/\">\r\n              {\" \"}\r\n              Sebastian Pellitero\r\n            </a>{\" \"}\r\n            I'm a Frontend Dev from{\" \"}\r\n            <a href=\"https://goo.gl/maps/4zZFfCFyBU1DAKGY7\">Argentina</a>. I\r\n            have been working around 3 years in this field building pages for\r\n            several brand known companies.\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            My passion started the first time I found a way to bring all the\r\n            logic from a dark boring console to a nice looking browser and all\r\n            the secrets behind it. From that moment on, I never stopped learning\r\n            new things and I try to keep them updated.\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            I worked not only with JS vanilla/ES6 but with ReactJS, that I\r\n            consider my main library along Redux Thunk and Saga. I extended my\r\n            practices to the mobile world with React-Native and learned all the\r\n            similarities and difficulties working with Android and OS\r\n            environments.\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            I'm familiar with Material UI framework as well as Saas and good\r\n            practices behind it. On my free time I am trying to extend my\r\n            knowledge about Node and complete the Fullstack circle, and keep up\r\n            with React updates, such as hooks and context. I'm a team player and\r\n            I like to be part and create a good environment in the group, I love\r\n            to share what I know and learn from others, not only from technology\r\n            but about life and experiences.\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            This challenge made me learn a lot of things about{\" \"}\r\n            <a href=\"https://sebastianpellitero.github.io/InterfacesCanvasPaint/\">\r\n              canvas\r\n            </a>\r\n            , I took a course at udemy about making video games in canvas and\r\n            that gave me some ground to start building. I never used canvas in\r\n            React before so it was a challenge and I was astonished in the way\r\n            that I could apply mathematics and trigonometry inside it.\r\n          </Typography>\r\n        </Grid>\r\n      </GridWrapper>\r\n    );\r\n  }\r\n}\r\n\r\n/*------------------------------------------------*/\r\n/* EXPORTS\r\n/*------------------------------------------------*/\r\nexport default About;\r\n","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport styled from \"styled-components\";\r\n/*------------------------------------------------*/\r\n/* INTERNAL DEPENDENCIES\r\n/*------------------------------------------------*/\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\n// Constant\r\nimport { THEME_KEYS } from \"../../constants/theme\";\r\nimport { Toolbar } from \"@material-ui/core\";\r\n\r\nexport const AppBarWrapper = styled(AppBar)`\r\n  &.MuiAppBar-root {\r\n    background-color: ${THEME_KEYS.oceanBlue};\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: ${THEME_KEYS.white};\r\n    font-size: 18px;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ToolbarWrapper = styled(Toolbar)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .right-container {\r\n    a:last-of-type span {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n`;\r\n","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n/*------------------------------------------------*/\r\n/* INTERNAL DEPENDENCIES\r\n/*------------------------------------------------*/\r\n// Styles\r\nimport { AppBarWrapper, ToolbarWrapper } from \"./header.style\";\r\n// Constants\r\nimport { ROOT, ABOUT, TUTORIAL } from \"../../constants/routes\";\r\n// Components\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <AppBarWrapper position=\"static\">\r\n        <ToolbarWrapper>\r\n          <Link to={ROOT}>\r\n            <span>Dashboard</span>\r\n          </Link>\r\n          <div className=\"right-container\">\r\n            <Link to={TUTORIAL}>\r\n              <span>Tutorial</span>\r\n            </Link>\r\n            <Link to={ABOUT}>\r\n              <span>About</span>\r\n            </Link>\r\n          </div>\r\n        </ToolbarWrapper>\r\n      </AppBarWrapper>\r\n    );\r\n  }\r\n}\r\n\r\n/*------------------------------------------------*/\r\n/* EXPORTS\r\n/*------------------------------------------------*/\r\nexport default Header;\r\n","// Pages\r\nexport const ROOT = '/';\r\nexport const ABOUT = '/about';\r\nexport const TUTORIAL = '/tutorial';","/*------------------------------------------------*/\n/* LIBRARIES\n/*------------------------------------------------*/\nimport React, { Component } from \"react\";\n/*------------------------------------------------*/\n/* INTERNAL DEPENDENCIES\n/*------------------------------------------------*/\n// Styles\nimport GridWrapper from \"./tutorial.style\";\n// Icons\nimport tick from \"../../icons/tick.svg\";\nimport center from \"../../icons/center.svg\";\nimport reset from \"../../icons/reset.svg\";\nimport list from \"../../icons/list.svg\";\n// Components\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass Tutorial extends Component {\n  render() {\n    return (\n      <GridWrapper container>\n        <Grid item xs={8} className=\"inner-grid\">\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            Draw simple shapes\n          </Typography>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            The objective of this program is to draw simple shapes and interact\n            with each other in real time. In order to make this interactive it\n            use complex trigonometric formulas such as the Pythagorean theorem\n            and Heron’s formula.\n            You can follow this steps:\n          </Typography>\n\n          <List>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <img src={tick} alt=\"icon\" />\n                </Avatar>\n              </ListItemAvatar>\n              <Typography variant=\"body1\">\n                Start clicking inside the canvas and watch how it draw each time\n                a red dot in the selected coordinates.\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <img src={tick} alt=\"icon\" />\n                </Avatar>\n              </ListItemAvatar>\n              <Typography variant=\"body1\">\n                After the third point is added, the fourth point generates\n                automatically constructing a parallelogram.\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <img src={tick} alt=\"Tick icon\" />\n                </Avatar>\n              </ListItemAvatar>\n              <Typography variant=\"body1\">\n                Try click and drag the red dots and the shape will recalculate\n                accordingly.\n              </Typography>\n            </ListItem>\n          </List>\n          <Typography gutterBottom variant=\"h5\" component=\"h4\" className=\"subtitle\">\n            Things to take in mind\n          </Typography>\n          <List>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <img src={center} alt=\"Center icon\" />\n                </Avatar>\n              </ListItemAvatar>\n              <Typography variant=\"body1\">\n                The yellow circle and the parallelogram have the same area.\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <img src={list} alt=\"List icon\" />\n                </Avatar>\n              </ListItemAvatar>\n              <Typography variant=\"body1\">\n                In the detail area you can see the data changing in real time.\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <img src={reset} alt=\"Reset icon\" />\n                </Avatar>\n              </ListItemAvatar>\n              <Typography variant=\"body1\">\n                The undo button will reset all the functionalities and you can\n                start drawing from the start.\n              </Typography>\n            </ListItem>\n          </List>\n        </Grid>\n      </GridWrapper>\n    );\n  }\n}\n\n/*------------------------------------------------*/\n/* PROP TYPES\n/*------------------------------------------------*/\nTutorial.propTypes = {\n  // Required\n  // Not required\n};\n\nTutorial.defaultProps = {};\n\n/*------------------------------------------------*/\n/* EXPORTS\n/*------------------------------------------------*/\nexport default Tutorial;\n","/*------------------------------------------------*/\r\n/* LIBRARIES\r\n/*------------------------------------------------*/\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n/*------------------------------------------------*/\r\n/* INTERNAL DEPENDENCIES\r\n/*------------------------------------------------*/\r\n// Components\r\nimport CanvasBoard from \"./components/board/board\";\r\nimport About from \"./components/about/about\";\r\nimport Header from \"./components/header/header\";\r\nimport Tutorial from \"./components/tutorial/tutorial\";\r\n// Constants\r\nimport { ROOT, ABOUT, TUTORIAL } from \"./constants/routes\";\r\n\r\nconst AppRouter = () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path={ROOT} exact component={CanvasBoard} />\r\n      <Route path={ABOUT} component={About} />\r\n      <Route path={TUTORIAL} component={Tutorial} />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport AppRouter from \"./router\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppRouter />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}